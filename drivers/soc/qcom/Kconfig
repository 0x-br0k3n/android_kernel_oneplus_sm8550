# SPDX-License-Identifier: GPL-2.0-only
#
# QCOM Soc drivers
#
menu "Qualcomm SoC drivers"

config QCOM_AOSS_QMP
	tristate "Qualcomm AOSS Driver"
	depends on ARCH_QCOM || COMPILE_TEST
	depends on MAILBOX
	depends on COMMON_CLK && PM
	select PM_GENERIC_DOMAINS
	help
	  This driver provides the means of communicating with and controlling
	  the low-power state for resources related to the remoteproc
	  subsystems as well as controlling the debug clocks exposed by the Always On
	  Subsystem (AOSS) using Qualcomm Messaging Protocol (QMP).

config QCOM_COMMAND_DB
	tristate "Qualcomm Command DB"
	depends on ARCH_QCOM || COMPILE_TEST
	depends on OF_RESERVED_MEM
	help
	  Command DB queries shared memory by key string for shared system
	  resources. Platform drivers that require to set state of a shared
	  resource on a RPM-hardened platform must use this database to get
	  SoC specific identifier and information for the shared resources.

config QCOM_CPR
	tristate "QCOM Core Power Reduction (CPR) support"
	depends on ARCH_QCOM && HAS_IOMEM
	select PM_OPP
	select REGMAP
	help
	  Say Y here to enable support for the CPR hardware found on Qualcomm
	  SoCs like QCS404.

	  This driver populates CPU OPPs tables and makes adjustments to the
	  tables based on feedback from the CPR hardware. If you want to do
	  CPUfrequency scaling say Y here.

	  To compile this driver as a module, choose M here: the module will
	  be called qcom-cpr

config QCOM_CPUSS_SLEEP_STATS
	tristate "Qualcomm Technologies, Inc. (QTI) CPUSS sleep stats driver"
	depends on DEBUG_FS
	help
	  Qualcomm Technologies, Inc. (QTI) CPUSS sleep stats driver to get
	  hardware LPM counts and residency for particular core/cluster
	  low power modes. This driver creates debugfs entry which provides
	  provision to read and reset those values.

config QCOM_GENI_SE
	tristate "QCOM GENI Serial Engine Driver"
	depends on ARCH_QCOM || COMPILE_TEST
	help
	  This driver is used to manage Generic Interface (GENI) firmware based
	  Qualcomm Technologies, Inc. Universal Peripheral (QUP) Wrapper. This
	  driver is also used to manage the common aspects of multiple Serial
	  Engines present in the QUP.

config QCOM_GSBI
	tristate "QCOM General Serial Bus Interface"
	depends on ARCH_QCOM || COMPILE_TEST
	select MFD_SYSCON
	help
	  Say y here to enable GSBI support.  The GSBI provides control
	  functions for connecting the underlying serial UART, SPI, and I2C
	  devices to the output pins.

config QCOM_MSM_IPCC
	tristate "Qualcomm Technologies, Inc. IPCC driver"
	depends on MAILBOX
	help
	  Qualcomm Technologies, Inc. IPCC driver for MSM devices. The drivers
	  acts as an interrupt controller for the clients interested in
	  talking to the IPCC (inbound-communication). On the other hand, the
	  driver also provides a mailbox channel for outbound-communications.
	  Say Y here to compile the driver as a part of kernel or M to compile
	  as a module.

config QCOM_RIMPS
	tristate "Qualcomm Technologies, Inc. Rimps driver"
	depends on MAILBOX
	help
	 Qualcomm Technologies, Inc. RIMPS driver for MSM devices. This driver
	 acts as a mailbox controller to do doorbell between Apss and Rimps
	 subsystem. Say yes here to enable rx and tx channel between both
	 the subsystems.
	 If unsure, say n.

config QCOM_LLCC
	tristate "Qualcomm Technologies, Inc. LLCC driver"
	depends on ARCH_QCOM || COMPILE_TEST
	help
	  Qualcomm Technologies, Inc. platform specific
	  Last Level Cache Controller(LLCC) driver for platforms such as,
	  SDM845. This provides interfaces to clients that use the LLCC.
	  Say yes here to enable LLCC slice driver.

config QCOM_KRYO_L2_ACCESSORS
	bool
	depends on ARCH_QCOM && ARM64 || COMPILE_TEST

config QCOM_LLCC_PERFMON
	tristate "Qualcomm Technologies, Inc. LLCC Perfmon driver"
	depends on QCOM_LLCC
	help
	  This option enables driver for LLCC Performance monitor block. Using
	  this various events in different LLCC sub ports can be monitored.
	  This is used for performance and debug activity and exports sysfs
	  interface. sysfs interface is used to configure and dump the LLCC
	  performance events.

config QCOM_MDT_LOADER
	tristate
	select QCOM_SCM

config QCOM_OCMEM
	tristate "Qualcomm On Chip Memory (OCMEM) driver"
	depends on ARCH_QCOM
	select QCOM_SCM
	help
	  The On Chip Memory (OCMEM) allocator allows various clients to
	  allocate memory from OCMEM based on performance, latency and power
	  requirements. This is typically used by the GPU, camera/video, and
	  audio components on some Snapdragon SoCs.

config QCOM_PDR_HELPERS
	tristate "Qualcomm Technologies, Inc. Protection Domain Restart(PDR) driver"
	select QCOM_QMI_HELPERS
	help
	  Qualcomm Technologies, Inc. SoCs allow for multiple protection domains (PDs)
	  to run on the same Q6 sub-system. This allows for services
	  like AVS AUDIO to have their own separate address space and
	  crash/recover without disrupting the other PDs running on
	  the same Q6 ADSP.

config QCOM_QMI_HELPERS
	tristate
	depends on NET

config QCOM_RMTFS_MEM
	tristate "Qualcomm Remote Filesystem memory driver"
	depends on ARCH_QCOM
	select QCOM_SCM
	help
	  The Qualcomm remote filesystem memory driver is used for allocating
	  and exposing regions of shared memory with remote processors for the
	  purpose of exchanging sector-data between the remote filesystem
	  service and its clients.

	  Say y here if you intend to boot the modem remoteproc.

config MSM_CORE_HANG_DETECT
        tristate "MSM Core Hang Detection Support"
        help
          This enables the core hang detection module. It causes SoC
          reset on core hang detection and collects the core context
          for hang. By using sysfs entries core hang detection can be
          enabled or disabled dynamically.

config QCOM_RPMH
	tristate "Qualcomm RPM-Hardened (RPMH) Communication"
	depends on ARCH_QCOM || COMPILE_TEST
	depends on (QCOM_COMMAND_DB || !QCOM_COMMAND_DB)
	help
	  Support for communication with the hardened-RPM blocks in
	  Qualcomm Technologies Inc (QTI) SoCs. RPMH communication uses an
	  internal bus to transmit state requests for shared resources. A set
	  of hardware components aggregate requests for these resources and
	  help apply the aggregated state on the resource.

config QCOM_RPMHPD
	tristate "Qualcomm RPMh Power domain driver"
	depends on QCOM_RPMH && QCOM_COMMAND_DB
	help
	  QCOM RPMh Power domain driver to support power-domains with
	  performance states. The driver communicates a performance state
	  value to RPMh which then translates it into corresponding voltage
	  for the voltage rail.

config QCOM_RPMPD
	tristate "Qualcomm RPM Power domain driver"
	depends on QCOM_SMD_RPM
	help
	  QCOM RPM Power domain driver to support power-domains with
	  performance states. The driver communicates a performance state
	  value to RPM which then translates it into corresponding voltage
	  for the voltage rail.

config QCOM_RUN_QUEUE_STATS
       tristate "Enable collection and exporting of QTI Run Queue stats to userspace"
       help
        This option enables the driver to periodically collecting the statistics
        of kernel run queue information and calculate the load of the system.
        This information is exported to usespace via sysfs entries and userspace
        algorithms uses info and decide when to turn on/off the cpu cores.

config QCOM_SMEM
	tristate "Qualcomm Shared Memory Manager (SMEM)"
	depends on ARCH_QCOM || COMPILE_TEST
	depends on HWSPINLOCK
	help
	  Say y here to enable support for the Qualcomm Shared Memory Manager.
	  The driver provides an interface to items in a heap shared among all
	  processors in a Qualcomm platform.

config QCOM_SMD_RPM
	tristate "Qualcomm Resource Power Manager (RPM) over SMD"
	depends on ARCH_QCOM || COMPILE_TEST
	depends on RPMSG
	help
	  If you say yes to this option, support will be included for the
	  Resource Power Manager system found in the Qualcomm 8974 based
	  devices.

	  This is required to access many regulators, clocks and bus
	  frequencies controlled by the RPM on these devices.

	  Say M here if you want to include support for the Qualcomm RPM as a
	  module. This will build a module called "qcom-smd-rpm".

config QCOM_MEMORY_DUMP_V2
	tristate "QCOM Memory Dump V2 Support"
	help
	  This enables memory dump feature. It allows various client
	  subsystems to register respective dump regions. At the time
	  of deadlocks or cpu hangs these dump regions are captured to
	  give a snapshot of the system at the time of the crash.

config QCOM_SMEM_STATE
	bool

config QCOM_SMP2P
	tristate "Qualcomm Shared Memory Point to Point support"
	depends on MAILBOX
	depends on QCOM_SMEM
	select QCOM_SMEM_STATE
	select IRQ_DOMAIN
	help
	  Say yes here to support the Qualcomm Shared Memory Point to Point
	  protocol.

config QCOM_SMSM
	tristate "Qualcomm Shared Memory State Machine"
	depends on QCOM_SMEM
	select QCOM_SMEM_STATE
	select IRQ_DOMAIN
	help
	  Say yes here to support the Qualcomm Shared Memory State Machine.
	  The state machine is represented by bits in shared memory.

config QCOM_SMP2P_SLEEPSTATE
	tristate "SMP2P Sleepstate notifier"
	depends on QCOM_SMP2P
	help
	  When this option is enabled, notifications are sent to remote procs
	  for the power state changes on the local processor. The notifications
	  are sent through the smp2p framework. This driver can also receive
	  notifications from the remote to prevent suspend on the local
	  processor.

config QSEE_IPC_IRQ_BRIDGE
	tristate "QSEE IPC Interrupt Bridge"
	help
	  This module enables bridging an Inter-Processor Communication(IPC)
	  interrupt from a remote subsystem directed towards
	  Qualcomm Technologies, Inc. Secure Execution Environment(QSEE) to
	  userspace. The interrupt will be propagated through a character device
	  that userspace clients can poll on.

config QCOM_GLINK
	tristate "GLINK Probe Helper"
	depends on RPMSG_QCOM_GLINK_SMEM
	help
	  This enables the GLINK Probe module. This is designed to set up
	  other edges in the system. It will initialize all the transports for
	  all the edges present in the device.
	  Say M if you want to enable this module.

config QCOM_GLINK_PKT
	tristate "Enable device interface for GLINK packet channels"
	depends on RPMSG_QCOM_GLINK_SMEM
	help
	  G-link packet driver provides the interface for the userspace
	  clients to communicate over G-Link via device nodes.
	  This enable the userspace clients to read and write to
	  some glink packets channel.

config QTI_PMIC_GLINK
	tristate "Enable support for PMIC GLINK"
	depends on RPMSG
	select QCOM_RPROC_COMMON
	select QCOM_PDR_HELPERS
	help
	  The PMIC Glink driver provides the interface for clients to
	  communicate over GLink for sending and receiving data to charger
	  firmware that runs on a remote subsystem like DSP which supports
	  charging and gauging.
	  This enables clients to read and write battery charging parameters.

config QTI_PMIC_GLINK_CLIENT_DEBUG
	depends on QTI_PMIC_GLINK && DEBUG_FS
	bool "Enable debugfs features in PMIC GLINK client drivers"
	help
	  This option enables the generation of debugfs files in PMIC GLINK
	  client drivers that are strictly meant for internal debugging only.
	  Writing to these debug files changes key physical parameters of a
	  system, which may lead to instability. Therefore, this option should
	  never be enabled on production devices.

config QTI_BATTERY_GLINK_DEBUG
	tristate "Enable support for QTI battery glink debug driver"
	depends on QTI_PMIC_GLINK
	help
	  Qualcomm Technologies, Inc. battery glink debug driver helps to
	  obtain debug information for battery charging and gauging over PMIC
	  Glink from charger and gauging firmware running on a remote subsystem
	  (e.g. DSP).

config QTI_CHARGER_ULOG_GLINK
	tristate "Enable support for QTI charger ulog glink driver"
	depends on QTI_PMIC_GLINK && DEBUG_FS
	help
	  Qualcomm Technologies, Inc. charger ulog glink driver helps to
	  obtain ulogs from battery charging and gauging stack over PMIC
	  Glink from the charger firmware running on a remote subsystem
	  (e.g. DSP).

config QTI_ALTMODE_GLINK
	tristate "Type-C alternate mode over GLINK"
	depends on QTI_PMIC_GLINK
	help
	  The Qualcomm Technologies, Inc. Type-C alternate mode driver provides
	  an interface for Type-C alternate mode clients to receive data such
	  as Pin Assignment Notifications from the Type-C stack running on a
	  remote subsystem (e.g. DSP) via the PMIC GLINK interface.

config QCOM_SECURE_BUFFER
	tristate "Helper functions for secure buffers through TZ"
	depends on QCOM_SCM
	help
	  Enable for targets that need to call into TZ to secure
	  memory buffers. This ensures that only the correct clients can
	  use this memory and no unauthorized access is made to the
	  buffer.

config QCOM_MEM_HOOKS
       tristate "Memory trace hook callbacks"
       help
	 A helper driver for loading various memory-related vendor
	 hooks, which are used to control the behavior of the core.
	 If unsure, say 'M' here to ensure that the hooks are compiled
	 in.

config MSM_CDSP_LOADER
	tristate "CDSP loader support"
	help
	  This enables the CDSP loader driver that loads the CDSP
	  firmware images and brings the compute DSP out of reset
	  for platforms that have one.
	  Say M if you want to enable this module.

config QCOM_SOCINFO
	tristate "Qualcomm socinfo driver"
	depends on QCOM_SMEM
	select SOC_BUS

	help
	 Say yes here to support the Qualcomm socinfo driver, providing
	 information about the SoC to user space.

source "drivers/soc/qcom/dcvs/Kconfig"

config QTI_HW_MEMLAT_LOG
	tristate "Qualcomm Technologies Inc. HW MEMLAT Logging"
	depends on IPC_LOGGING && QCOM_RIMPS
	default n
	help
	  Memlat hw logging driver, this driver has the infra to collect logs
	  generated in MEMLAT HW and log the buffers.

	  This driver register with IPC_Logging framework, to have dedicated
	  buffer for memlat hw device.


config QCOM_SOC_SLEEP_STATS
	tristate "Qualcomm Technologies, Inc. (QTI) SoC sleep stats driver"
	depends on ARCH_QCOM && DEBUG_FS || COMPILE_TEST
	help
	  Qualcomm Technologies, Inc. (QTI) SoC sleep stats driver to read
	  the shared memory exported by the remote processor related to
	  various SoC level low power modes statistics and export to debugfs
	  interface.

config QCOM_WDT_CORE
	tristate "Qualcomm Technologies, Inc. Watchdog Support"
	depends on ARCH_QCOM
	help
	   This enables the watchdog framework for Qualcomm Technologies, Inc.
	   devices. It causes a kernel panic if the watchdog times out. It allows
	   for the detection of cpu hangs and deadlocks. It does not run during the
	   bootup process, so it will not catch any early lockups. Enabling this
	   only enables the framework, an individual Qualcomm Technologies, Inc.
	   watchdog module must be loaded along with this for watchdog
	   functionality.

config QCOM_SOC_WATCHDOG
	tristate "Qualcomm Technologies, Inc. Soc Watchdog"
	depends on QCOM_WDT_CORE
	help
	  This enables the Qualcomm Technologies, Inc. watchdog module for the
	  Soc. It provides an interface to perform watchdog actions such as
	  setting the bark/bite time and also petting the hardware watchdog. To
	  utilize this the Qualcomm Technologies, Inc. watchdog framework must
	  also be enabled.

config QCOM_IRQ_STAT
	bool "QCOM IRQ stats"
	depends on QCOM_WDT_CORE
	help
	  This give irq stats for top hitter at
	  watchdog pet, watchdog bark and kernel panics.
	  This provides additional debug information
	  for irq counts on cpu and ipi counts.

config QCOM_LOGBUF_VENDOR_HOOKS
	tristate "QTI Logbuf Vendor Hooks Support"
	depends on ARCH_QCOM && ANDROID_VENDOR_HOOKS
	help
	  This enables to keep copy of initial log_buf
	  of minimum 512KB from bootup. It can help in
	  debugging issues which are manifestation
	  of failure during initial bootup.

config QCOM_FORCE_WDOG_BITE_ON_PANIC
	bool "QCOM force watchdog bite on panic"
	depends on QCOM_WDT_CORE
	help
	  This forces a watchdog bite when the device restarts
	  due to a kernel panic. On certain MSM SoCs,
	  this provides additional debugging
	  information.

config QCOM_WDOG_BITE_EARLY_PANIC
	bool "QCOM early panic watchdog bite"
	depends on QCOM_WDT_CORE && QCOM_FORCE_WDOG_BITE_ON_PANIC
	help
	  This forces a watchdog bite early in panic sequence. On certain
	  MSM SoCs, this provides us additional debugging information at the
	  context of the crash. If this option is disabled, then bite occurs
	  later in panic, which permits more of the restart sequence to run
	  (e.g. more dmesg to flushed to console).

config QCOM_WATCHDOG_BARK_TIME
	depends on QCOM_WDT_CORE
	int "Qualcomm Technologies, Inc. Watchdog bark time in ms"
	default 11000
	range 11000 11000
	help
	  The amount of time, in milliseconds, that should elapse after
	  a watchdog timer reset before a bark interrupt is sent from the
	  watchdog.

config QCOM_WATCHDOG_PET_TIME
	depends on QCOM_WDT_CORE
	int "Qualcomm Technologies, Inc. Watchdog pet time in ms"
	default 9360
	range 9360 9360
	help
	  The amount of time, in milliseconds, that should elapse before
	  a watchdog pet is initiated to reset the watchdog timer to 0.

config QCOM_WATCHDOG_IPI_PING
	depends on QCOM_WDT_CORE
	bool "Qualcomm Technologies, Inc. Watchdog ipi ping"
	default y
	help
	  This boolean flag gives the watchdog driver the ability to send a
	  keep-alive ping to other cpu's if it is set to 1. Otherwise, when
	  it is set to 0 no keep alive pings will be sent.

config QCOM_WATCHDOG_WAKEUP_ENABLE
	depends on QCOM_WDT_CORE
	bool "Qualcomm Technologies, Inc. Watchdog wakeup enable"
	default y
	help
	  This boolean flag allows the non secure watchdog counter to freeze
	  and unfreeze automatically across the system suspend and resume
	  path.

config QCOM_WATCHDOG_USERSPACE_PET
	depends on QCOM_WDT_CORE
	bool "Qualcomm Technologies, Inc. Watchdog user pet enable"
	default n
	help
	  This boolean flag allows enabling the userspace-watchdog feature.
	  This feature requires userspace to pet the watchdog every in an
	  interval that matches the time set in the pet-time config.
	  The feature is supported through device sysfs files.

config QCOM_WCNSS_CTRL
	tristate "Qualcomm WCNSS control driver"
	depends on ARCH_QCOM || COMPILE_TEST
	depends on RPMSG
	help
	  Client driver for the WCNSS_CTRL SMD channel, used to download nv
	  firmware to a newly booted WCNSS chip.

config QCOM_DCC_V2
       tristate "Qualcomm Technologies Data Capture and Compare enigne support for V2"
       help
         This option enables driver for Data Capture and Compare engine. DCC
         driver provides interface to configure DCC block and read back
         captured data from DCC's internal SRAM.

config QCOM_SUBSYSTEM_SLEEP_STATS
	tristate "Qualcomm Technologies, Inc. Subsystem sleep stats driver"
	depends on QCOM_SMEM
	help
	  This driver is IOCTL implementation to get the subsystem stats data
	  from SMEM. Stats information such as sleep count, last entered at,
	  last exited at and accumulated duration can be read from
	  userspace with ioctl.

config QCOM_APR
	tristate "Qualcomm APR Bus (Asynchronous Packet Router)"
	depends on ARCH_QCOM || COMPILE_TEST
	depends on RPMSG
	depends on NET
	select QCOM_PDR_HELPERS
	help
	  Enable APR IPC protocol support between
	  application processor and QDSP6. APR is
	  used by audio driver to configure QDSP6
	  ASM, ADM and AFE modules.

config QCOM_EUD
        tristate "QTI Embedded USB Debugger (EUD)"
        depends on ARCH_QCOM
        select SERIAL_CORE
        help
          The EUD (Embedded USB Debugger) is a mini-USB hub implemented
          on chip to support the USB-based debug and trace capabilities.
          This module enables support for Qualcomm Technologies, Inc.
          Embedded USB Debugger (EUD).
          If unsure, say N.

config QPNP_PBS
	tristate "PBS trigger support for QPNP PMIC"
	depends on SPMI
	help
	  This driver supports configuring software PBS trigger event through PBS
	  RAM on Qualcomm Technologies, Inc. QPNP PMICs. This module provides
	  the APIs to the client drivers that wants to send the PBS trigger
	  event to the PBS RAM.

config QTI_PMIC_PON_LOG
	tristate "PMIC PON log parser driver"
	help
	  The PMIC PON log driver parses PMIC power-on, power-off, and fault
	  information out of a binary log stored in the SDAM memory found on
	  some Qualcomm Technologies, Inc. PMIC devices.  This driver is useful
	  when debugging unexpected power-off scenarios.

config MSM_BOOT_STATS
	tristate "Use MSM boot stats reporting"
	help
	  Use this to report msm boot stats such as bootloader throughput,
	  display init, total boot time.
	  This figures are reported in mpm sleep clock cycles and have a
	  resolution of 31 bits as 1 bit is used as an overflow check.

config USB_BAM
	tristate "USB BAM Driver"
	depends on SPS && USB_GADGET
	help
	  Enabling this option adds USB BAM Driver.
	  USB BAM driver was added to supports Smart Peripheral Subsystem
	  Peripheral-to-Peripheral transfers between the USB and other
	  peripheral.

config QCOM_RAMDUMP
	tristate "Qualcomm Technologies, Inc. Ramdump driver"
	default n
	help
	  This option enables the QTI ramdump driver. The ramdump driver
	  provides APIs to collect ramdumps which can be extracted from
	  userspace. Say 'Y' here to enable this driver. It's safe to say
	  'N' here if you don't plan on collecting ramdumps.

config QCOM_CPU_VENDOR_HOOKS
        tristate "QTI Vendor Hooks Support"
        depends on ARCH_QCOM && ANDROID_VENDOR_HOOKS
        help
          CPU vendor hooks driver registers with andriod vendor hooks
          provided by core kernel to extend kernel functionality.

          Currently these features are not supported by upstream kernel and not
          having scope to upstream.
          If unsure, say N.

config QCOM_PANEL_EVENT_NOTIFIER
	tristate "panel event notifier"
	depends on DRM
	help
	Enabling this option adds panel event notifier driver.
	This driver is responsible for notifying clients interested in display
	panel events such as panel on , panel off, fps change etc.  Clients
	can use these notifications for power saving or align its operations
	with display panel power state.

config QCOM_GUESTVM
        tristate "Enable Guest VM to be loaded by PIL"
        select QCOM_MDT_LOADER
        help
           This driver invokes Peripheral Image Loader to load images of
           any guest Virtual Machine (VM). It also communicates with the
           Resource Manager driver to start the boot of VMs once it has
           successfully loaded the VM images in the designated memory.

config QCOM_HYP_CORE_CTL
        tristate "CPU reservation scheme for Hypervisor"
        depends on QCOM_GUESTVM && SCHED_WALT
        help
          This driver reserve the specified CPUS by isolating them. The reserved
          CPUs can be assigned to the other guest OS by the hypervisor.
          An offline CPU is considered as a reserved CPU since this OS can't use
          it.

config QCOM_FSA4480_I2C
	tristate "Fairchild FSA4480 chip with I2C"
	select REGMAP_I2C
	depends on I2C
	help
	  Support for the Fairchild FSA4480 IC switch chip controlled
	  using I2C. This driver provides common support
	  for accessing the device, switching between USB and Audio
	  modes, changing orientation.

config GH_TLMM_VM_MEM_ACCESS
        tristate "Qualcomm Technologies, Inc. TLMM VM mem access driver"
        depends on GH_RM_DRV
        help
         Qualcomm Technologies, Inc. TLMM VM mem access driver for MSM devices.
         The drivers provides initial gpio memory access to VM.
         Say Y here to compile the driver as a part of kernel or M to compile
         as a module.

source "drivers/soc/qcom/mem_buf/Kconfig"

endmenu
